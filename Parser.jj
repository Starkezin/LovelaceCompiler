PARSER_BEGIN(Parser)
import java.io.*;
public class Parser {

  public static void main(String args[]) throws ParseException,IOException {
    
 Parser parser = new Parser(new FileInputStream(args[0]));
 parser.Parser();
  }

}

PARSER_END(Parser)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

TOKEN :
{
  <MAIN: "main">
| <ACHAVES: "{">
| <FCHAVES: "}">
| <APARENTESES:"(">
| <FPARENTESES:")">
| <PRINT: "print">
| <ATRIB: ":=">
| <PV: ";">
}

TOKEN :
{
  <NUM : (["0"-"9"])+>
 |< ID: ["a"-"z","A"-"Z"] ( ["a"-"z","A"-"Z","0"-"9"])*>

}


// Parser -> "main" "{" COMANDOS  "}"

void Parser () :
{}
{

<MAIN> <ACHAVES> Comandos() <FCHAVES>
<EOF> 

}



// COMANDOS -> COM ";"  COMANDOS'

void Comandos () :
{}
{

 Com() <PV> ComandosL()

}

// COMANDOS'->   COM ";" COMANDOS' | epsilon

void ComandosL () :
{}
{

 ( Com()  <PV>  ComandosL())?

}



// COM -> id ":=" EXP | "print" "(" EXP ")"

void Com () :
{}
{

  (<ID> <ATRIB> Exp()) | (<PRINT> <APARENTESES> Exp() <FPARENTESES>) 

}


// EXP -> num | id

void Exp () :
{}
{
    <NUM> | <ID>
}
